---
import Card from "@components/card.astro";
import Pagination from "@components/pagination.astro";
import Layout from "@layouts/layout.astro";
import type { GetStaticPathsOptions } from "astro";
import { getCollection } from "astro:content";
import { compareDesc } from "date-fns";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const blogPosts = await getCollection("blog");
  const sortedBlogPosts = blogPosts.sort((a, b) =>
    compareDesc(a.data.pubDate as Date, b.data.pubDate)
  );
  return paginate(sortedBlogPosts, { pageSize: 6 });
}

const {
  page: {
    data,
    url: { prev, next },
  },
} = Astro.props;

type PostData = {
  id: string;
  slug: string;
  body: string;
  collection: string;
  data: {
    image: string;
    title: string;
  };
  render: unknown;
};
---

<Layout pageTitle="Blog Posts" description="ブログの記事一覧">
  <h1>Blog Posts</h1>
  <div class="grid">
    {
      data.map((post: PostData) => {
        const {
          slug,
          data: { image, title },
        } = post;
        return <Card url={`/blog/${slug}`} src={image} title={title} />;
      })
    }
  </div>

  <Pagination prev={prev} next={next} />
</Layout>
